
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

public class DatabaseC {

	public static void main(String[] args) throws SQLException, ClassNotFoundException {
		// TODO Auto-generated method stub
		Class.forName("com.mysql.jdbc.Driver");
		Connection c=DriverManager.getConnection("jdbc:mysql://localhost:3306/minor2","root","Bineek@123");
		String s1=("create table DataC1(StringCode varchar(10),StringName varchar(30),Description varchar(2000))");
		Statement s=c.createStatement();
		int i=s.executeUpdate(s1);
		String s2=("insert into DataC1 values(?,?,?)");
		PreparedStatement ps1=c.prepareStatement(s2);
		ps1.setString(1, "C001");
		ps1.setString(2,"strcpyA");
		ps1.setString(3,"Function appears in Microsoft's banned function list. Can facilitate buffer overflow conditions.");
		int rowAffected1=ps1.executeUpdate();
		ps1.setString(1, "C002");
		ps1.setString(2,"strcpyW");
		ps1.setString(3,"Function returns an Intent message that has been passed to the application. Data from Intents should be considered untrusted and be validated for length, data type, content etc.");
		int rowAffected2=ps1.executeUpdate();
		ps1.setString(1, "C003");
		ps1.setString(2,"strcpy");
		ps1.setString(3,"Creates a local file on the device. Function appears in Microsoft's banned function list. Can facilitate buffer overflow conditions.");
		int rowAffected3=ps1.executeUpdate();
		ps1.setString(1, "C004");
		ps1.setString(2,"StrCpyNA");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected4=ps1.executeUpdate();
		ps1.setString(1, "C005");
		ps1.setString(2,"StrCpyNW");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected5=ps1.executeUpdate();
		ps1.setString(1, "C006");
		ps1.setString(2,"StrCpyN");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected6=ps1.executeUpdate();
		ps1.setString(1, "C007");
		ps1.setString(2,"StrNCpyA");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected7=ps1.executeUpdate();
		ps1.setString(1, "C008");
		ps1.setString(2,"StrNCpyW");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected8=ps1.executeUpdate();
		ps1.setString(1, "C009");
		ps1.setString(2,"StrNCpy");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected9=ps1.executeUpdate();
		ps1.setString(1, "C010");
		ps1.setString(2,"strcatA");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected10=ps1.executeUpdate();
		ps1.setString(1, "C011");
		ps1.setString(2,"strcatW");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected11=ps1.executeUpdate();
		ps1.setString(1, "C012");
		ps1.setString(2,"strcat");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected12=ps1.executeUpdate();
		ps1.setString(1, "C013");
		ps1.setString(2,"lstrcatA");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected13=ps1.executeUpdate();
		ps1.setString(1, "C014");
		ps1.setString(2,"lstrcatW");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected14=ps1.executeUpdate();
		ps1.setString(1, "C015");
		ps1.setString(2,"lstrcat");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected15=ps1.executeUpdate();
		ps1.setString(1, "C016");
		ps1.setString(2,"StrCatBuffA");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected16=ps1.executeUpdate();
		ps1.setString(1, "C017");
		ps1.setString(2,"StrCatBuffW");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected17=ps1.executeUpdate();
		ps1.setString(1, "C018");
		ps1.setString(2,"StrCatBuff");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected18=ps1.executeUpdate();
		ps1.setString(1, "C019");
		ps1.setString(2,"lstrcatnA");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected19=ps1.executeUpdate();
		ps1.setString(1, "C020");
		ps1.setString(2,"lstrcatnW");
		ps1.setString(3,"This package is flawed and produces predictable values for any given seed which are easily reproducible once the starting seed is identified.");
		int rowAffected20=ps1.executeUpdate();
		ps1.setString(1, "C0021");
		ps1.setString(2,"lstrcatn");
		ps1.setString(3,"Function appears in Microsoft's banned function list. Can facilitate buffer overflow conditions.");
		int rowAffected21=ps1.executeUpdate();
		ps1.setString(1, "C0022");
		ps1.setString(2,"lstrncat");
		ps1.setString(3,"Function returns an Intent message that has been passed to the application. Data from Intents should be considered untrusted and be validated for length, data type, content etc.");
		int rowAffected22=ps1.executeUpdate();
		ps1.setString(1, "C0023");
		ps1.setString(2,"strncat");
		ps1.setString(3,"Creates a local file on the device. Function appears in Microsoft's banned function list. Can facilitate buffer overflow conditions.");
		int rowAffected23=ps1.executeUpdate();
		ps1.setString(1, "C0024");
		ps1.setString(2,"strtok");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected24=ps1.executeUpdate();
		ps1.setString(1, "C0025");
		ps1.setString(2,"tcstok");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected25=ps1.executeUpdate();
		ps1.setString(1, "C0026");
		ps1.setString(2,"wcstok");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected26=ps1.executeUpdate();
		ps1.setString(1, "C0027");
		ps1.setString(2,"mbstok");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected27=ps1.executeUpdate();
		ps1.setString(1, "C0028");
		ps1.setString(2,"makepath");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected28=ps1.executeUpdate();
		ps1.setString(1, "C0029");
		ps1.setString(2,"splitpath");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected29=ps1.executeUpdate();
		ps1.setString(1, "C030");
		ps1.setString(2,"scanf");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected30=ps1.executeUpdate();
		ps1.setString(1, "C031");
		ps1.setString(2,"gets");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected31=ps1.executeUpdate();
		ps1.setString(1, "C032");
		ps1.setString(2,"getts");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected32=ps1.executeUpdate();
		ps1.setString(1, "C033");
		ps1.setString(2,"wcslen");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected33=ps1.executeUpdate();
		ps1.setString(1, "C034");
		ps1.setString(2,"lstrlen");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected34=ps1.executeUpdate();
		ps1.setString(1, "C035");
		ps1.setString(2,"wmemcpy");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected35=ps1.executeUpdate();
		ps1.setString(1, "C036");
		ps1.setString(2,"CopyMemory");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected36=ps1.executeUpdate();
		ps1.setString(1, "C037");
		ps1.setString(2,"alloca");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected37=ps1.executeUpdate();
		ps1.setString(1, "C038");
		ps1.setString(2,"memmove");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected38=ps1.executeUpdate();
		ps1.setString(1, "C039");
		ps1.setString(2,"realloc");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected39=ps1.executeUpdate();
		ps1.setString(1, "C040");
		ps1.setString(2,"sprintf");
		ps1.setString(3,"This package is flawed and produces predictable values for any given seed which are easily reproducible once the starting seed is identified.");
		int rowAffected40=ps1.executeUpdate();
		ps1.setString(1, "C041");
		ps1.setString(2,"nsprintf");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected41=ps1.executeUpdate();
		ps1.setString(1, "C042");
		ps1.setString(2,"vsprintf");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected42=ps1.executeUpdate();
		ps1.setString(1, "C043");
		ps1.setString(2,"IsBadWritePtr");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected43=ps1.executeUpdate();
		ps1.setString(1, "C044");
		ps1.setString(2,"wopen");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected44=ps1.executeUpdate();
		ps1.setString(1, "C045");
		ps1.setString(2,"fopen");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected45=ps1.executeUpdate();
		ps1.setString(1, "C046");
		ps1.setString(2,"open");
		ps1.setString(3,"This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.");
		int rowAffected46=ps1.executeUpdate();
		ps1.setString(1, "C047");
		ps1.setString(2,"goto");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected47=ps1.executeUpdate();
		ps1.setString(1, "C048");
		ps1.setString(2,"rewind");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected48=ps1.executeUpdate();
		ps1.setString(1, "C049");
		ps1.setString(2,"umask");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected49=ps1.executeUpdate();
		ps1.setString(1, "C050");
		ps1.setString(2,"catgets");
		ps1.setString(3,"This function extracts data directly from the HTTP request. Manually check the code to ensure the data obtained is correctly validated and/or sanitised.");
		int rowAffected50=ps1.executeUpdate();
		ps1.setString(1, "C051");
		ps1.setString(2,"getenv");
		ps1.setString(3,"This package is flawed and produces predictable values for any given seed which are easily reproducible once the starting seed is identified.");
		int rowAffected51=ps1.executeUpdate();

		}

}
